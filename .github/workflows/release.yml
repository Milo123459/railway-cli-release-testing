name: Deploy
on:
  push:
    tags:
      - "v*"

env:
  CARGO_INCREMENTAL: 0

jobs:
  # Build sources for every OS
  github_build:
    name: Build release binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest

          - target: i686-unknown-linux-musl
            os: ubuntu-latest

          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest

          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest

          - target: x86_64-apple-darwin
            os: macOS-latest

          - target: aarch64-apple-darwin
            os: macOS-latest

          - target: x86_64-pc-windows-msvc
            os: windows-latest

          - target: i686-pc-windows-msvc
            os: windows-latest

          - target: aarch64-pc-windows-msvc
            os: windows-latest

          - target: x86_64-unknown-freebsd
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Setup | Cache
        uses: Swatinem/rust-cache@v1

      - name: Build | Build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Get Version
        id: version
        run: echo ::set-output name=version::$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].version')

      - name: Post Build | Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip railway.exe
          version=${{ steps.version.outputs.version }}
          7z a ../../../railway-${{ version }}-${{ matrix.target }}.zip railway.exe
          cd -

      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          # TODO: investigate better cross platform stripping
          strip railway || true
          version=${{ steps.version.outputs.version }}
          tar czvf ../../../railway-${{ version }}-${{ matrix.target }}.tar.gz railway
          cd -

      - name: Build | Create Debian package
        if: matrix.os == 'ubuntu-latest'
        run: |
          version=${{ steps.version.outputs.version }}
          cargo install cargo-deb
          cargo deb --no-build --target ${{ matrix.target }}
          mv target/${{ matrix.target }}/debian/railway_${{ version }}_${{ matrix.target }}.deb railway-${{ version }}-${{ matrix.target }}.deb

      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: railway-${{ steps.version.outputs.version }}-${{ matrix.target }}
          path: |
            railway-${{ steps.version.outputs.version }}-${{ matrix.target }}.*
            target/${{ matrix.target }}/debian/*.deb

  # Create GitHub release with Rust build targets
  github_release:
    name: Create GitHub Release
    needs: github_build
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup | Artifacts
        uses: actions/download-artifact@v3

      - name: Build | Publish
        uses: softprops/action-gh-release@v1
        with:
          files: |
            railway-*/railway-*
            railway-*/railway-*.deb

  # Publish to crates.io and bump Homebrew formula
#   publish:
#     name: Publish to crates.io and Bump Homebrew Formula
#     needs: github_release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Publish to crates.io
#         uses: dtolnay/publish-rust-crate@v1
#         with:
#           token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

#       - name: Bump Homebrew Formula
#         uses: ryanjbonnell/homebrew-formula-updater@v1.0.0
#         with:
#           formula: rlwy
#           version: ${{ steps.version.outputs.version }}
#           token: ${{ secrets.GITHUB_TOKEN }}
